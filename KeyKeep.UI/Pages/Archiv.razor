@page "/Archiv"

@inject IDataProvider DataProvider
@inject IDialogService DialogService
@inject ISnackbar Toaster
@inject UserService UserService

<PageTitle>Archiv</PageTitle>

<DefaultLayout>
    <Content>
        @if (allArchivedPasswordInfos.Count != 0)
        {
            <MudDataGrid Items="@allArchivedPasswordInfos"
                     Dense="true"
                     Striped="true"
                     Hover="true"
                     Virtualize="true">
                <Columns>
                    <PropertyColumn Title="Titel" Property="x => x.Title" />
                    <PropertyColumn Title="Beschreibung" Property="x => x.Description" />
                    <PropertyColumn Title="Link" Property="x => x.URL" />
                    <PropertyColumn Title="Benutzername" Property="x => x.UserName" />
                    <PropertyColumn Title="Passwort" Property="x => x.UserPassword" />
                    <TemplateColumn>
                        <CellTemplate>
                            <MudStack Row>

                            <MudTooltip Text="Zeige Details">
                                <MudFab Size="Size.Small" IconSize="Size.Small" Color="Color.Info" StartIcon="@Icons.Material.Filled.Info" OnClick="() => OnClickShowDetails(context.Item)" />
                            </MudTooltip>

                            <MudTooltip Text="Wiederherstellen">
                                <MudFab Size="Size.Small" IconSize="Size.Small" Color="Color.Warning" StartIcon="@Icons.Material.Filled.RestartAlt" OnClick="() => OnClickReactivate(context.Item)" />
                            </MudTooltip>

                            <MudTooltip Text="Löschen">
                                <MudFab Size="Size.Small" IconSize="Size.Small" Color="Color.Error" StartIcon="@Icons.Material.Filled.Delete" OnClick="() => OnClickDelete(context.Item)" />
                            </MudTooltip>

                        </MudStack>
                    </CellTemplate>
                </TemplateColumn>
            </Columns>
        </MudDataGrid>
        }
        else
        {
            <MudText Style="text-align: center" Typo="Typo.h5">Keine Archivierten Daten..</MudText>
        }
    </Content>
</DefaultLayout>

@code
{
    private List<PasswordInfo> allArchivedPasswordInfos;

    protected override async Task OnInitializedAsync()
    {
        await Refresh();

        StateHasChanged();
    }

    private async Task Refresh()
    {
        allArchivedPasswordInfos = (await DataProvider.GetPasswordsFromUser(UserService.CurrentUser.Id)).Where(x => x.IsDeleted).ToList() ?? new List<PasswordInfo>();
    }

    private async Task OnClickShowDetails(PasswordInfo item)
    {
        var dialogResult = await DialogService.ShowAsync<DialogAddPassword>("Passwort bearbeiten", new DialogParameters
        {
            {nameof(DialogAddPassword.PasswordId), item.Id},
            {nameof(DialogAddPassword.IsDeleted), item.IsDeleted},
        }, new DialogOptions
        {
            CloseOnEscapeKey = true
        });
        var ka = dialogResult.Result;

        await Refresh();
    }

    private async Task OnClickDelete(PasswordInfo item)
    {
        if (item != null)
        {
            var result = await DialogService.ShowAsync<DialogDelete>("Achtung !", new DialogParameters(), new DialogOptions
            {
                CloseOnEscapeKey = true
            });


            if ((bool)(await result.Result).Data)
            {
                await DataProvider.DeletePassword(item);

                await Refresh();

                Toaster.Add("Erfolgreich gelöscht", MudBlazor.Severity.Success);
            }
        }
    }

    private async Task OnClickReactivate(PasswordInfo item)
    {
        if (item != null)
        {
            await DataProvider.ArchivePassword(item);

            await Refresh();

            Toaster.Add("Erfolgreich wiederhergestellt", MudBlazor.Severity.Success);
        }
    }
}