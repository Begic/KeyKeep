@inject ILoginProvider LoginProvider

<DefaultLayout>
    <MudGrid>
        <MudItem>
            <MudTextField Label="E-Mail" T="string" @bind-Text="@Email" />
        </MudItem>
        <MudItem>
            <MudTextField Label="Paswort" T="string" @bind-Text="@Password" />
        </MudItem>
        <MudButton Variant="Variant.Filled" Color="Color.Info" OnClick="OnClickRegister">Registrieren</MudButton>
        <MudButton Variant="Variant.Filled" Color="Color.Success" OnClick="OnClickTryLogin">Anmelden</MudButton>
    </MudGrid>
</DefaultLayout>

@code
{
    [Parameter]
    public bool CanLogin { get; set; }

    [Parameter]
    public EventCallback<bool> CanLoginChanged { get; set; }

    public string Password { get; set; }
    public string Email { get; set; }

    private async Task OnClickTryLogin()
    {
        var loginUser = await LoginProvider.CheckUserForLogin(Email, Password);

        if (loginUser != null)
        {
            
        }
        else
        {

        }

        await CanLoginChanged.InvokeAsync();
    }

    private async Task OnClickRegister()
    {

    }
}