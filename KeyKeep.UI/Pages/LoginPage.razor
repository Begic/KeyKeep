@inject ILoginProvider LoginProvider
@inject UserService UserService
@inject ISnackbar Toaster

<DefaultLayout>
    <Content>
        <MudGrid>
            <MudItem xs="3"></MudItem>
            <MudItem xs="6">
                <MudTextField Label="E-Mail" @bind-Value="@Email"/>
                <MudTextField Label="Passwort" @bind-Value="@Password"/>
                <MudButton FullWidth="true" Variant="Variant.Filled" Color="Color.Success" OnClick="OnClickTryLogin">Anmelden</MudButton>
                <MudButton FullWidth="true" Variant="Variant.Filled" Color="Color.Primary" OnClick="OnClickRegister">Registrieren</MudButton>
            </MudItem>
            <MudItem xs="3"></MudItem>
        </MudGrid>
    </Content>
</DefaultLayout>

@code
{
    [Parameter]
    public bool CanLogin { get; set; }

    [Parameter]
    public EventCallback<bool> CanLoginChanged { get; set; }

    public string Password { get; set; }
    public string Email { get; set; }

    private async Task OnClickTryLogin()
    {
        var loginUser = await LoginProvider.CheckUserForLogin(Email, Password);

        if (loginUser != null)
        {
            CanLogin = true;
            UserService.CurrentUser = loginUser;
            Toaster.Add("Login erfolgreich", Severity.Success);
        }
        else
        {
            CanLogin = false;
            UserService.CurrentUser = null;
            Toaster.Add("Login fehlerhaft", Severity.Error);
        }

        await CanLoginChanged.InvokeAsync(CanLogin);
    }

    private async Task OnClickRegister()
    {
        // TODO
    }
}