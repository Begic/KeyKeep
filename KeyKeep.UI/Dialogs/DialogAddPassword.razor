@inject IDataProvider DataProvider
@inject ISnackbar Toaster


<EditForm Model="@PasswordInfoToEdit" OnValidSubmit="@Save">
    <MudDialog>
        <DialogContent>
            <MudGrid>
                <MudItem md="12">

                </MudItem>
                <MudItem md="12">

                </MudItem>
                <MudItem md="12">

                </MudItem>
                <MudItem md="12">
                    <MudTextField @bind-Value="@PasswordInfoToEdit.UserPassword" Label="Passwort" Variant="Variant.Outlined" InputType="@PasswordInput" Adornment="Adornment.End" AdornmentIcon="@PasswordInputIcon" OnAdornmentClick="OnClickShowPassword" AdornmentAriaLabel="Zeige Passwort" />
                </MudItem>
            </MudGrid>
        </DialogContent>
        <DialogActions>
        
            <MudButton Color="Color.Error" ButtonType="ButtonType.Button" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Cancel" OnClick="@OnClickCancel">Abbrechen</MudButton>
            <MudButton Color="Color.Success" ButtonType="ButtonType.Submit" Variant="Variant.Filled" EndIcon="@Icons.Material.Filled.Save">Speichern</MudButton>

        </DialogActions>
    </MudDialog>
</EditForm>

@code
{
    [CascadingParameter]
    public MudDialogInstance? Dialog { get; set; }

    public PasswordInfo PasswordInfoToEdit { get; set; } = new();

    InputType PasswordInput = InputType.Password;
    string PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
    private bool isShow;

    private async Task Save()
    {
        
    }

    private async Task OnClickCancel()
    {
        
    }

    private void OnClickShowPassword()
    {
        @if (isShow)
        {
            isShow = false;
            PasswordInputIcon = Icons.Material.Filled.VisibilityOff;
            PasswordInput = InputType.Password;
        }
        else {
            isShow = true;
            PasswordInputIcon = Icons.Material.Filled.Visibility;
            PasswordInput = InputType.Text;
        }
    }
}